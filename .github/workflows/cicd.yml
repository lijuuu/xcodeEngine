name: Simple Binary Deploy

on:
  push:
    branches: [main, deploytesting]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Build binary
        run: |
          GOOS=linux GOARCH=amd64 go build -o codeexecutionengine ./cmd/main.go

      - name: Upload binary and restart systemd service on EC2
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_SERVER_IP }}
        run: |
          echo "$SSH_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem

          scp -o StrictHostKeyChecking=no -i ssh_key.pem codeexecutionengine ubuntu@$EC2_HOST:/tmp/codeexecutionengine

          ssh -o StrictHostKeyChecking=no -i ssh_key.pem ubuntu@$EC2_HOST << 'EOF'
            sudo mv /tmp/codeexecutionengine /usr/local/bin/engine
            sudo chmod +x /usr/local/bin/engine

            # create service only if not exists
            if [ ! -f /etc/systemd/system/engine.service ]; then
              echo "Creating engine.service..."
              sudo tee /etc/systemd/system/engine.service > /dev/null <<EOL
              [Unit]
              Description=Engine Service
              After=network.target

              [Service]
              ExecStart=/usr/local/bin/engine
              WorkingDirectory=/home/ubuntu
              Restart=always
              User=ubuntu
              Group=ubuntu

              [Install]
              WantedBy=multi-user.target
              EOL
              sudo systemctl daemon-reexec
              sudo systemctl daemon-reload
              sudo systemctl enable engine.service
            fi

            sudo systemctl restart engine.service
          EOF
