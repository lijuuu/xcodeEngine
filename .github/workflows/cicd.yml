name: CI-CD Pipeline

on:
  push:
    branches:
      - testcicd
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.1"

      # Step 3: Install Go dependencies
      - name: Install dependencies
        run: go mod download

      # Step 4: Run Go vet to check for code issues
      - name: Run go vet
        run: go vet ./...

      # Step 5: Build the Go binary
      - name: Build binary
        run: go build -o codeexecutionengine ./cmd

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 7: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t lijuthomas/codeexecutionengine:${{ github.sha }} -t lijuthomas/codeexecutionengine:latest .
          docker push lijuthomas/codeexecutionengine:${{ github.sha }}
          docker push lijuthomas/codeexecutionengine:latest

      # Step 8: Deploy to EC2
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_SERVER_IP }}
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          printf "%s" "$SSH_KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@$EC2_HOST '
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin &&
            docker stop codeexecutionengine || true &&
            docker rm codeexecutionengine || true &&
            docker pull lijuthomas/codeexecutionengine:latest &&
            docker run -d --name codeexecutionengine -p 50053:50053 \
              -v /var/run/docker.sock:/var/run/docker.sock \
              lijuthomas/codeexecutionengine:latest
          '
          rm -f key.pem